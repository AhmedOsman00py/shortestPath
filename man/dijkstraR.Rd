% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dijkstraR.R
\name{dijkstraR}
\alias{dijkstraR}
\title{Dijkstra's algorithm, finds shortest distance to other nodes}
\usage{
dijkstraR(graph_DataFrame, start_node)
}
\arguments{
\item{graph_DataFrame}{Data.frame object with three variables (from, to and weight)
that contains the edges of a directed or undirected graph (from  to) with the weight of the edge (weight).
"from" and "to" must be vector of numbers starting from 1,2,3,..(int or str type).}

\item{start_node}{initial node.}
}
\value{
solution is a list of two elements.
solution$distance : is a vector of shortest distance from start_node to others. for example solution$distance[i]
is shortest distance from start_node to ith node.
solution$path is vector of predecessor to each node. we can identify the spanning tree of the graph.
}
\description{
The algorithm takes a graph_DataFrame and an initial node and calculates the shortest path from the initial node to every other node in the graph_DataFrame.
}
\examples{
graph_DataFrame <-
 data.frame(from=c(1,6,2,2,2,2,7,7,5,3,3),
          to=c(6,1,1,6,5,4,1,5,4,4,2),
          weight=c(5,1,3,11,3,10,5,4,4,7,1))
dijkstra(graph_DataFrame, 3)
graph_DataFrame <-
 data.frame(from=c("1","6","2","2","2","2","7","7","5","3","3"),
          to=c("6","1","1","6","5","4","1","5","4","4","2"),
          weight=c(5,1,3,11,3,10,5,4,4,7,1))
dijkstraR(graph_DataFrame,"3")
}
